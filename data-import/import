#!/usr/bin/env ruby

require 'time'
require './lib/mysql_connection'
require './lib/subject'

CaptureTimeThreshold = 60

Subjects = []
Errors = []

def walk_season(root)
  # Directory structure is {root}/{site}/{roll}/{image}

  root_path = File.expand_path root
  total = Dir[File.join root_path, '**/*.{jpg,JPG}'].count
  index = 0

  Dir.new(root_path).each do |site|
    next if site.start_with? '.'

    site_path = File.expand_path File.join root, site
    Dir.new(site_path).each do |roll|
      next if roll.start_with? '.'

      roll_images = Mysql.query("SELECT * FROM `image`
        WHERE `SiteCode` = '#{site}'
        AND `SiteRollCode` LIKE '%#{roll}'
      ").to_a

      roll_path = File.expand_path File.join root, site, roll
      Dir.new(roll_path).each do |image|
        next if image.match(/jpg$/i).nil?

        puts "#{index} / #{total}"
        index = index + 1

        image_path = File.expand_path File.join root, site, roll, image

        image_record = roll_images.find do |roll_image|
          roll_image['Filename'] == image
        end

        if image_record.nil?
          puts "No image record found for #{site}/#{roll}/#{image}!"
          Errors << "#{site}/#{roll}/#{image}"
        else
          last_subject = Subjects.last

          if last_subject
            difference = last_subject.location.keys.last - image_record['DateTime']
          end

          if last_subject.nil? or difference.abs > CaptureTimeThreshold
            last_subject.save unless last_subject.nil?
            Subjects.pop
            Subjects << Subject.new(image_record, image_path)
          else
            last_subject.location.merge!({image_record['DateTime'] => image_path})
          end
        end
      end
    end
  end
end

really = !ARGV.delete('--really').nil?

walk_season ARGV[0]
